# Generated by Django 2.2.5 on 2019-09-18 04:26

import core.blocks
import datetime
from django.db import migrations, models
import django.db.models.deletion
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArticleIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('font_awesome_icon', models.CharField(blank=True, max_length=75)),
            ],
            options={
                'verbose_name': 'Article index page',
                'verbose_name_plural': 'Article index pages',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BasePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('date', models.DateField(default=datetime.datetime.today, verbose_name='Post date')),
                ('allow_comments', models.BooleanField(default=True, verbose_name='allow comments')),
                ('allow_main_image', models.BooleanField(default=True, verbose_name='Show main image on page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ArticlePage',
            fields=[
                ('basepage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.BasePage')),
                ('body', wagtail.core.fields.StreamField([('title_and_text', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(help_text='Add your title', required=True)), ('text', wagtail.core.blocks.TextBlock(help_text='Add additional text', required=True))])), ('centered_title', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(help_text='Add your title', max_length=75, required=True)), ('subtitle', wagtail.core.blocks.TextBlock(help_text='Add subtitle text', required=False))])), ('full_richtext', core.blocks.RichTextBlock()), ('simple_richtext', core.blocks.SimpleRichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('HTML', wagtail.core.blocks.RawHTMLBlock()), ('cards', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(help_text='Add your title', required=True)), ('cards', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('title', wagtail.core.blocks.CharBlock(max_length=40, required=True)), ('text', core.blocks.SimpleRichTextBlock(max_length=150, required=True)), ('button_page', wagtail.core.blocks.PageChooserBlock(required=False)), ('button_url', wagtail.core.blocks.URLBlock(help_text='If the button page above is selected, that will be used first.', required=False)), ('button_text', wagtail.core.blocks.CharBlock(default='See more', help_text='Enter some text for the button', max_length=30, required=False))])))])), ('cta', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(max_length=60, required=True)), ('text', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic'], max_length=200, required=True)), ('button_page', wagtail.core.blocks.PageChooserBlock(required=False)), ('button_url', wagtail.core.blocks.URLBlock(help_text='If the button page above is selected, that will be used first.', required=False)), ('button_text', wagtail.core.blocks.CharBlock(default='See more', help_text='Enter some text for the button', max_length=30, required=False))])), ('button', wagtail.core.blocks.StructBlock([('button_page', wagtail.core.blocks.PageChooserBlock(help_text='If selected, this page will be used', required=False)), ('button_url', wagtail.core.blocks.URLBlock(help_text='If added, this URL will be used instead.', required=False)), ('button_text', wagtail.core.blocks.CharBlock(help_text='Enter some text for the button', max_length=30, required=True))])), ('image_carousel', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.TextBlock(required=False))]))), ('image_block', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('alignment', core.blocks.ImageFormatChoiceBlock()), ('caption', wagtail.core.blocks.CharBlock()), ('attribution', wagtail.core.blocks.CharBlock(required=False))]))], blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('core.basepage',),
        ),
    ]
